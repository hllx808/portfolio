{
    "about": {
        "name": "David Ruiz",
        "title": "Undergraduate Tutor/Math Researcher",
        "bio": {
            "text": "Hey! I'm an Undergraduate Student at Boston College in my Junior year. I'm currently working on a Bachelor's Degree of Science for CS and a Minor in Mathematics. I'm extremely passionate about the ways in which technology can be used to encourage learning and better our world. I run a version of Linux using AwesomeWM as my window manager with a very customized configuration that I like to tweak every few weeks. I'm involved in an expiremental math lab at Boston College where we're trying to use Machine Learning to categorize certain Coxeter groups based on their properties. I'm also a content tutor at our schools athlete center where I tutor introductory CS and Math courses.",
            "update-date": "Updated on: 03-06-2025"
        },
        "photo": "./media/pfp.png",
        "email-url": "ruizdeca@bc.edu",
        "git1-url": "https://github.com/hllx808",
        "git2-url": "https://github.com/beered239",
        "linkedin-url": "https://www.linkedin.com/in/david-ruiz-de-castilla-19689b217/"
    },
    "news": [
        {
            "title": "CS & Math Content Tutor",
            "date": "February 2025"
        },
        {
            "title": "Summer Math Research Assistant",
            "date": "May 2024"
        },
        {
            "title": "Apple Playlist Exporter",
            "date": "March 2024"
        },
        {
            "title": "Bandcamp Webscraper & Downloader",
            "date": "March 2022"
        }
    ],
    "project-summary": [
        {
            "id": "schottky",
            "title": "Schottky Circle Visualization Algorithm",
            "function-text": "Python and Java code that generates a visual representation's of Schottky Groups which was the focus of a Math Research Project at Boston College over the Summer of 2023.",
            "purpose-text": "The code and implementation of the IIS algorithm was primarily developed by me in both python and java with the intention of making a readable representation of how the algorithm would work in practice. The algorithm itself uses an inversion map with relation to a circle to create a visual representation of a schottky group using. This idea was introduced and explored by undergraduate students from Meiji University so a lot of credit goes to their team for creating an efficient method of generating the figures without using a composition of mobius maps, a method that is computationally less efficient.",
            
            "optional-link": {
                "src": "https://github.com/hllx808/Schottky-Circles-IIS-algorithm/"
            }
        },
        {
            "id": "apple-playlist",
            "title": "Apple Playlist Exporter",
            "function-text": "Building upon what was learned from the Bandcamp Project the next goal was to be able to parse a more complex dynamic page this time with help from well documented libraries. The project used Selenium and Beautiful Soup libraries for python which were able to take as input the url to an apple music playlist and then parse it, and run it through a hidden browser window ran in the background using Gecko, Firefox's browser engine, and after all dynamic elements were loaded the titles of the songs in the playlist as well as those of the artist could then be saved.",
            "purpose-text": "The goal of this project was to create a utility that could turn a webpage's messy data and return a programming language friendly version of the data to potentially be used in future projects."
        },
        {
            "id": "bandcamp",
            "title": "Bandcamp Downloader",
            "function-text": "Java code using core libraries that downloaded the mp3 tracks of an album on bandcamp after taking a valid url as input.",
            "purpose-text": "An older project using Java with no web parsing libraries that examined aspects of data sent via url's, specifically bandcamp url's in order to better understand one of the ways webpages receive and send data to servers using a Get method which is easier to find the specifics of in a static html page like the one's Bandcamp used. Some challenges included created a very rudementary abstract syntax tree that mostly detected groupings based on brackets in html and json files downloaded from a bandcamp url. Then this was parsed to get working links for each track on an album page."
        }
    ],

    "project-pages": [
        {
            "id": "schottky",
            "description": "This project and code specifically was created in the Summer of 2024, for a research project ran by members in the Math Department at Boston College. The first part of half of the research prjoect focused on understanding relvenat concepts relating to group theory, maps, and understanding how a transformation between one geometric space to another is possible. One of the goals of the project was to present these subjects in a more accessible and interesting way. Part of this was achieved through the use of visualizations of figures, like the one on the left, that were generated by the mobius maps we were studying.",
            "description-date": "Updated on: 03-12-2025",
            "image-path": "./media/appollonian-gasket.png",
            "image-caption": "Apollonian Gasket generated by 4 circles",
            "technologies": [
                ["languages", "Java (initially) and then Python"],
                ["Graphical Library(s)", "StdDraw.java, Pillow (Py)"],
                ["Computational Libraries", "Numpy"]
            ],
            "features" : [
                "Customize the resolution of the schottky circle figure",
                "Support for Circles with infinite Radius",
                "Set Complex plane size",
                "Filter visible pixels by a minimum word length",
                "MultiProcessing Support (WIP)"
            ],
            "development-process": "This project was a team effort and was ccomplished with help from other undergraduate students at BC. Additionally the code is an implementation of a more efficient way of creating a visual representation of mobius maps acting on one another using something called an Iterative Inverse System. This used a regular non-mobius circle inversion map for every pixel until a point was eventually mapped to the identity space. We initially used some code in Java and improved on the preformance given the library that was used to generate it. I later translated it to python and structured the circle generators into classes, including one for circles that visually look like plains due to their infinite border.",
            "future-improvements": "Currently I'm trying to add multiprocessing support to break down the work load and use more computational resources on the very large 2x2 array that ends up generating the circle because the time to generate the Gasket for example takes more time than I would like.",
            "repository-link": "https://github.com/hllx808/Schottky-Circles-IIS-algorithm" 
        },
        {
            "id": "apple-playlist",
            "description": "This project was a personal endeavour following a previous one related to downloading music from bandcamp automatically. This project was more so about downloading important information that could then be used to search for the music on other platforms because of the known DRM components that sites like Apple Music and Spotify have. Both projects were about removing the reliance of these websites and companies because ultimately music streamed through websites like Apple Music, never belong to the user, a user's \"library\" is basically being borrowed and not owned. This project also helped improve my skills with web scraping and combining tools like Selenium and Beuatiful Soup to get a complete webpage with all data since components are nowadays added dynamically and directly downloading an html document expecting static content shouldn't be assumed.",
            "description-date": "Updated on: 03-12-2025",
            "image-path": "./media/apple-music.png",
            "image-caption": "Apple Playlist Page being parsed",
            "technologies": [
                ["Languages", "Python"],
                ["Web Scraping Tools", "Selenium, Beautiful Soup"],
                ["Data Extraction Tools", "Created own JsonStruct class"]
            ],
            "features" : [
                "Limited url parsing, only apple music playlists so far",
                "Some webpage caching is used/possible",
                "Saving JSON of prevously saved pages to keep a \"history\" of sorts"
            ],
            "development-process": "The first part of the project involved figuring out the feasibility of getting a fully loaded page. I explored potential existing options for libraries that could save and parse dynamic web pages. Initially I wanted to create fake requests and just get raw data that way because I didn't like the idea of relying on a library that basically requires the computational power to run an actual browser, which seemed sort of expensive for the task. I still think the web requests is a viable route if more research is done on which parts of the page ask for what content, and if there's a specific way to get just the playlist content info the preformance gain would be significant. I ultimately decided to use selenimum and BS4 and played around with their configuration and what specific classes or tag attributes to seek out once a page was downloaded to only keep the parts of the page that had the playlist data. The custom JSON class library was later implemented along with a method of caching pages so that selenium wouldn't be ran everytime during testing.",
            "future-improvements": "As I mentioned, I think narrowing the focus on requests would be a very different but possible solution. I also need to clean up the codebase because as of right now it is pretty messsy and unpresentable.",
            "repository-link": "#" 
        }
    ]
}